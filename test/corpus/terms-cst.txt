==================
numbers
:cst
:skip
==================

p(0,9,0xf,0b1,0o7).

---

1:0  - 2:0    source_file
1:0  - 1:19     rule
1:0  - 1:18       head: literal
1:0  - 1:18         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:17           arguments: terms
1:2  - 1:3              number `0`
1:3  - 1:4              ","
1:4  - 1:5              number `9`
1:5  - 1:6              ","
1:6  - 1:9              number `0xf`
1:9  - 1:10             ","
1:10 - 1:13             number `0b1`
1:13 - 1:14             ","
1:14 - 1:17             number `0o7`
1:17 - 1:18           ")"
1:18 - 1:19       "."

==================
constants
:cst
:skip
==================

p("abc", #inf, #sup).

---

1:0  - 2:0    source_file
1:0  - 1:21     rule
1:0  - 1:20       head: literal
1:0  - 1:20         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:19           arguments: terms
1:2  - 1:7              string
1:2  - 1:3                "\""
1:3  - 1:6                string_fragment `abc`
1:6  - 1:7                "\""
1:7  - 1:8              ","
1:9  - 1:13             infimum `#inf`
1:13 - 1:14             ","
1:15 - 1:19             supremum `#sup`
1:19 - 1:20           ")"
1:20 - 1:21       "."

==================
variables
:cst
:skip
==================

p(X,_,__'Xa').

---

1:0  - 2:0    source_file
1:0  - 1:14     rule
1:0  - 1:13       head: literal
1:0  - 1:13         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:12           arguments: terms
1:2  - 1:3              variable `X`
1:3  - 1:4              ","
1:4  - 1:5              anonymous `_`
1:5  - 1:6              ","
1:6  - 1:12             variable `__'Xa'`
1:12 - 1:13           ")"
1:13 - 1:14       "."

==================
unary
:cst
:skip
==================

p(-1,~1,|1;2|).

---

1:0  - 2:0    source_file
1:0  - 1:15     rule
1:0  - 1:14       head: literal
1:0  - 1:14         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:13           arguments: terms
1:2  - 1:4              unary_operation
1:2  - 1:3                "-"
1:3  - 1:4                right: number `1`
1:4  - 1:5              ","
1:5  - 1:7              unary_operation
1:5  - 1:6                "~"
1:6  - 1:7                right: number `1`
1:7  - 1:8              ","
1:8  - 1:13             abs
1:8  - 1:9                "|"
1:9  - 1:10               number `1`
1:10 - 1:11               ";"
1:11 - 1:12               number `2`
1:12 - 1:13               "|"
1:13 - 1:14           ")"
1:14 - 1:15       "."

==================
binary
:cst
:skip
==================

p(1..2,1^2,1?2,1&2,1+2,1-2,1*2,1/2,1\2,1**2).

---

1:0  - 2:0    source_file
1:0  - 1:45     rule
1:0  - 1:44       head: literal
1:0  - 1:44         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:43           arguments: terms
1:2  - 1:6              binary_operation
1:2  - 1:3                left: number `1`
1:3  - 1:5                ".."
1:5  - 1:6                right: number `2`
1:6  - 1:7              ","
1:7  - 1:10             binary_operation
1:7  - 1:8                left: number `1`
1:8  - 1:9                "^"
1:9  - 1:10               right: number `2`
1:10 - 1:11             ","
1:11 - 1:14             binary_operation
1:11 - 1:12               left: number `1`
1:12 - 1:13               "?"
1:13 - 1:14               right: number `2`
1:14 - 1:15             ","
1:15 - 1:18             binary_operation
1:15 - 1:16               left: number `1`
1:16 - 1:17               "&"
1:17 - 1:18               right: number `2`
1:18 - 1:19             ","
1:19 - 1:22             binary_operation
1:19 - 1:20               left: number `1`
1:20 - 1:21               "+"
1:21 - 1:22               right: number `2`
1:22 - 1:23             ","
1:23 - 1:26             binary_operation
1:23 - 1:24               left: number `1`
1:24 - 1:25               "-"
1:25 - 1:26               right: number `2`
1:26 - 1:27             ","
1:27 - 1:30             binary_operation
1:27 - 1:28               left: number `1`
1:28 - 1:29               "*"
1:29 - 1:30               right: number `2`
1:30 - 1:31             ","
1:31 - 1:34             binary_operation
1:31 - 1:32               left: number `1`
1:32 - 1:33               "/"
1:33 - 1:34               right: number `2`
1:34 - 1:35             ","
1:35 - 1:38             binary_operation
1:35 - 1:36               left: number `1`
1:36 - 1:37               "\\"
1:37 - 1:38               right: number `2`
1:38 - 1:39             ","
1:39 - 1:43             binary_operation
1:39 - 1:40               left: number `1`
1:40 - 1:42               "**"
1:42 - 1:43               right: number `2`
1:43 - 1:44           ")"
1:44 - 1:45       "."

==================
precedence
:cst
:skip
==================

p(1+-2*2**-3**0..1-2).

---

1:0  - 2:0    source_file
1:0  - 1:22     rule
1:0  - 1:21       head: literal
1:0  - 1:21         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:20           arguments: terms
1:2  - 1:20             binary_operation
1:2  - 1:15               left: binary_operation
1:2  - 1:3                  left: number `1`
1:3  - 1:4                  "+"
1:4  - 1:15                 right: binary_operation
1:4  - 1:6                    left: unary_operation
1:4  - 1:5                      "-"
1:5  - 1:6                      right: number `2`
1:6  - 1:7                    "*"
1:7  - 1:15                   right: binary_operation
1:7  - 1:8                      left: number `2`
1:8  - 1:10                     "**"
1:10 - 1:15                     right: unary_operation
1:10 - 1:11                       "-"
1:11 - 1:15                       right: binary_operation
1:11 - 1:12                         left: number `3`
1:12 - 1:14                         "**"
1:14 - 1:15                         right: number `0`
1:15 - 1:17               ".."
1:17 - 1:20               right: binary_operation
1:17 - 1:18                 left: number `1`
1:18 - 1:19                 "-"
1:19 - 1:20                 right: number `2`
1:20 - 1:21           ")"
1:21 - 1:22       "."

==================
function
:cst
:skip
==================

p(f(),g,h(;1;;-f(;;),2;),@g,@g()).

---

1:0  - 2:0    source_file
1:0  - 1:34     rule
1:0  - 1:33       head: literal
1:0  - 1:33         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:32           arguments: terms
1:2  - 1:5              function
1:2  - 1:3                name: identifier `f`
1:3  - 1:4                "("
1:4  - 1:5                ")"
1:5  - 1:6              ","
1:6  - 1:7              function
1:6  - 1:7                name: identifier `g`
1:7  - 1:8              ","
1:8  - 1:24             function
1:8  - 1:9                name: identifier `h`
1:9  - 1:10               "("
1:10 - 1:10               arguments: empty_pool_item 
1:10 - 1:11               ";"
1:11 - 1:12               arguments: terms
1:11 - 1:12                 number `1`
1:12 - 1:13               ";"
1:13 - 1:13               arguments: empty_pool_item 
1:13 - 1:14               ";"
1:14 - 1:22               arguments: terms
1:14 - 1:20                 unary_operation
1:14 - 1:15                   "-"
1:15 - 1:20                   right: function
1:15 - 1:16                     name: identifier `f`
1:16 - 1:17                     "("
1:17 - 1:17                     arguments: empty_pool_item 
1:17 - 1:18                     ";"
1:18 - 1:18                     arguments: empty_pool_item 
1:18 - 1:19                     ";"
1:19 - 1:19                     arguments: empty_pool_item 
1:19 - 1:20                     ")"
1:20 - 1:21                 ","
1:21 - 1:22                 number `2`
1:22 - 1:23               ";"
1:23 - 1:23               arguments: empty_pool_item 
1:23 - 1:24               ")"
1:24 - 1:25             ","
1:25 - 1:27             external_function
1:25 - 1:26               "@"
1:26 - 1:27               name: identifier `g`
1:27 - 1:28             ","
1:28 - 1:32             external_function
1:28 - 1:29               "@"
1:29 - 1:30               name: identifier `g`
1:30 - 1:31               "("
1:31 - 1:32               ")"
1:32 - 1:33           ")"
1:33 - 1:34       "."

==================
tuple
:cst
:skip
==================

p((),(;a;a,;;a,b;a,b,),(,),(c;,)).

---

1:0  - 2:0    source_file
1:0  - 1:34     rule
1:0  - 1:33       head: literal
1:0  - 1:33         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:32           arguments: terms
1:2  - 1:4              tuple
1:2  - 1:3                "("
1:3  - 1:4                ")"
1:4  - 1:5              ","
1:5  - 1:22             tuple
1:5  - 1:6                "("
1:6  - 1:6                empty_pool_item 
1:6  - 1:7                ";"
1:7  - 1:8                function
1:7  - 1:8                  name: identifier `a`
1:8  - 1:9                ";"
1:9  - 1:11               terms
1:9  - 1:10                 function
1:9  - 1:10                   name: identifier `a`
1:10 - 1:11                 ","
1:11 - 1:12               ";"
1:12 - 1:12               empty_pool_item 
1:12 - 1:13               ";"
1:13 - 1:16               terms
1:13 - 1:14                 function
1:13 - 1:14                   name: identifier `a`
1:14 - 1:15                 ","
1:15 - 1:16                 function
1:15 - 1:16                   name: identifier `b`
1:16 - 1:17               ";"
1:17 - 1:21               terms
1:17 - 1:18                 function
1:17 - 1:18                   name: identifier `a`
1:18 - 1:19                 ","
1:19 - 1:20                 function
1:19 - 1:20                   name: identifier `b`
1:20 - 1:21                 ","
1:21 - 1:22               ")"
1:22 - 1:23             ","
1:23 - 1:26             tuple
1:23 - 1:24               "("
1:24 - 1:25               lone_comma `,`
1:25 - 1:26               ")"
1:26 - 1:27             ","
1:27 - 1:32             tuple
1:27 - 1:28               "("
1:28 - 1:29               function
1:28 - 1:29                 name: identifier `c`
1:29 - 1:30               ";"
1:30 - 1:31               lone_comma `,`
1:31 - 1:32               ")"
1:32 - 1:33           ")"
1:33 - 1:34       "."

==================
identifier
:cst
:skip
==================

p(n, no, noxt, a, -n, -no, -noxt, -a).

---

1:0  - 2:0    source_file
1:0  - 1:38     rule
1:0  - 1:37       head: literal
1:0  - 1:37         atom: symbolic_atom
1:0  - 1:1            name: identifier `p`
1:1  - 1:2            "("
1:2  - 1:36           arguments: terms
1:2  - 1:3              function
1:2  - 1:3                name: identifier `n`
1:3  - 1:4              ","
1:5  - 1:7              function
1:5  - 1:7                name: identifier `no`
1:7  - 1:8              ","
1:9  - 1:13             function
1:9  - 1:13               name: identifier `noxt`
1:13 - 1:14             ","
1:15 - 1:16             function
1:15 - 1:16               name: identifier `a`
1:16 - 1:17             ","
1:18 - 1:20             unary_operation
1:18 - 1:19               "-"
1:19 - 1:20               right: function
1:19 - 1:20                 name: identifier `n`
1:20 - 1:21             ","
1:22 - 1:25             unary_operation
1:22 - 1:23               "-"
1:23 - 1:25               right: function
1:23 - 1:25                 name: identifier `no`
1:25 - 1:26             ","
1:27 - 1:32             unary_operation
1:27 - 1:28               "-"
1:28 - 1:32               right: function
1:28 - 1:32                 name: identifier `noxt`
1:32 - 1:33             ","
1:34 - 1:36             unary_operation
1:34 - 1:35               "-"
1:35 - 1:36               right: function
1:35 - 1:36                 name: identifier `a`
1:36 - 1:37           ")"
1:37 - 1:38       "."
