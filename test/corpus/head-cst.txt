==================
symbolic literal
:cst
:skip
==================

not p.

---

1:0 - 2:0   source_file
1:0 - 1:6     rule
1:0 - 1:5       head: literal
1:0 - 1:3         sign: default_negation `not`
1:4 - 1:5         atom: symbolic_atom
1:4 - 1:5           name: identifier `p`
1:5 - 1:6       "."

==================
comparison
:cst
:skip
==================

X < Y < Z.
 
---

1:0  - 2:1    source_file
1:0  - 1:10     rule
1:0  - 1:9        head: literal
1:0  - 1:9          atom: comparison
1:0  - 1:1            variable `X`
1:2  - 1:3            relation `<`
1:4  - 1:5            variable `Y`
1:6  - 1:7            relation `<`
1:8  - 1:9            variable `Z`
1:9  - 1:10       "."

==================
boolean
:cst
:skip
==================

#true; #false.
 
---

1:0  - 2:1    source_file
1:0  - 1:14     rule
1:0  - 1:13       head: disjunction
1:0  - 1:5          literal
1:0  - 1:5            atom: boolean_constant `#true`
1:5  - 1:6          ";"
1:7  - 1:13         literal
1:7  - 1:13           atom: boolean_constant `#false`
1:13 - 1:14       "."

==================
disjunction
:cst
:skip
==================

p; p: q, c; d: ; |X| < 10.

---

1:0  - 2:0    source_file
1:0  - 1:26     rule
1:0  - 1:25       head: disjunction
1:0  - 1:1          literal
1:0  - 1:1            atom: symbolic_atom
1:0  - 1:1              name: identifier `p`
1:1  - 1:2          ";"
1:3  - 1:10         conditional_literal
1:3  - 1:4            literal: literal
1:3  - 1:4              atom: symbolic_atom
1:3  - 1:4                name: identifier `p`
1:4  - 1:5            ":"
1:6  - 1:10           condition: condition
1:6  - 1:7              literal
1:6  - 1:7                atom: symbolic_atom
1:6  - 1:7                  name: identifier `q`
1:7  - 1:8              ","
1:9  - 1:10             literal
1:9  - 1:10               atom: symbolic_atom
1:9  - 1:10                 name: identifier `c`
1:10 - 1:11         ";"
1:12 - 1:14         conditional_literal
1:12 - 1:13           literal: literal
1:12 - 1:13             atom: symbolic_atom
1:12 - 1:13               name: identifier `d`
1:13 - 1:14           ":"
1:15 - 1:16         ";"
1:17 - 1:25         literal
1:17 - 1:25           atom: comparison
1:17 - 1:20             abs
1:17 - 1:18               "|"
1:18 - 1:19               variable `X`
1:19 - 1:20               "|"
1:21 - 1:22             relation `<`
1:23 - 1:25             number `10`
1:25 - 1:26       "."

==================
head set aggregate
:cst
:skip
==================

1 <= { a; a: b, c } <= 2.

---

1:0  - 2:0    source_file
1:0  - 1:25     rule
1:0  - 1:24       head: set_aggregate
1:0  - 1:4          left: lower
1:0  - 1:1            number `1`
1:2  - 1:4            relation `<=`
1:5  - 1:6          "{"
1:7  - 1:17         elements: set_aggregate_elements
1:7  - 1:8            set_aggregate_element
1:7  - 1:8              literal: literal
1:7  - 1:8                atom: symbolic_atom
1:7  - 1:8                  name: identifier `a`
1:8  - 1:9            ";"
1:10 - 1:17           set_aggregate_element
1:10 - 1:11             literal: literal
1:10 - 1:11               atom: symbolic_atom
1:10 - 1:11                 name: identifier `a`
1:11 - 1:12             ":"
1:13 - 1:17             condition: condition
1:13 - 1:14               literal
1:13 - 1:14                 atom: symbolic_atom
1:13 - 1:14                   name: identifier `b`
1:14 - 1:15               ","
1:16 - 1:17               literal
1:16 - 1:17                 atom: symbolic_atom
1:16 - 1:17                   name: identifier `c`
1:18 - 1:19         "}"
1:20 - 1:24         right: upper
1:20 - 1:22           relation `<=`
1:23 - 1:24           number `2`
1:24 - 1:25       "."

==================
head aggregate
:cst
:skip
==================

1 <= #count { :a; 1:a:b,c; 1:a: } <= 2.

---

1:0  - 2:0    source_file
1:0  - 1:39     rule
1:0  - 1:38       head: head_aggregate
1:0  - 1:4          left: lower
1:0  - 1:1            number `1`
1:2  - 1:4            relation `<=`
1:5  - 1:11         function: aggregate_function `#count`
1:12 - 1:13         "{"
1:14 - 1:31         elements: head_aggregate_elements
1:14 - 1:16           head_aggregate_element
1:14 - 1:15             ":"
1:15 - 1:16             literal: literal
1:15 - 1:16               atom: symbolic_atom
1:15 - 1:16                 name: identifier `a`
1:16 - 1:17           ";"
1:18 - 1:25           head_aggregate_element
1:18 - 1:19             terms: terms
1:18 - 1:19               number `1`
1:19 - 1:20             ":"
1:20 - 1:21             literal: literal
1:20 - 1:21               atom: symbolic_atom
1:20 - 1:21                 name: identifier `a`
1:21 - 1:22             ":"
1:22 - 1:25             condition: condition
1:22 - 1:23               literal
1:22 - 1:23                 atom: symbolic_atom
1:22 - 1:23                   name: identifier `b`
1:23 - 1:24               ","
1:24 - 1:25               literal
1:24 - 1:25                 atom: symbolic_atom
1:24 - 1:25                   name: identifier `c`
1:25 - 1:26           ";"
1:27 - 1:31           head_aggregate_element
1:27 - 1:28             terms: terms
1:27 - 1:28               number `1`
1:28 - 1:29             ":"
1:29 - 1:30             literal: literal
1:29 - 1:30               atom: symbolic_atom
1:29 - 1:30                 name: identifier `a`
1:30 - 1:31             ":"
1:32 - 1:33         "}"
1:34 - 1:38         right: upper
1:34 - 1:36           relation `<=`
1:37 - 1:38           number `2`
1:38 - 1:39       "."

==================
head theory
:cst
:skip
==================

&p(;a;b;) < 1.

---

1:0  - 2:0    source_file
1:0  - 1:14     rule
1:0  - 1:13       head: theory_atom
1:0  - 1:1          "&"
1:1  - 1:2          name: identifier `p`
1:2  - 1:3          "("
1:3  - 1:3          arguments: empty_pool_item 
1:3  - 1:4          ";"
1:4  - 1:5          arguments: terms
1:4  - 1:5            function
1:4  - 1:5              name: identifier `a`
1:5  - 1:6          ";"
1:6  - 1:7          arguments: terms
1:6  - 1:7            function
1:6  - 1:7              name: identifier `b`
1:7  - 1:8          ";"
1:8  - 1:8          arguments: empty_pool_item 
1:8  - 1:9          ")"
1:10 - 1:13         right: theory_atom_upper
1:10 - 1:11           theory_operator `<`
1:12 - 1:13           number `1`
1:13 - 1:14       "."
